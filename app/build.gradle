apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "au.com.test.weather_app"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {
        release {
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
        }
        debug {
            keyAlias 'uploadd'
            keyPassword 'test456d'
            storeFile file('../weatherapp.debug.jks')
            storePassword 'test123d'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

ext {
    androidSupportVersion = '29.0.2'
    daggerVersion = '2.24'
    retrofitVersion = '2.7.1'
    okhttpVersion = '3.14.4'
    rxandroidVersion = '2.1.1'
    rxjava2Version = '2.2.6'
    kotlinTestVersion = '3.3.3'
    coroutinesVersion = '1.3.0-M2'
    glideVersion = '4.11.0'
    roomVersion = '1.1.1'
    lifecycle_version = "2.2.0"
    savedstate_version = "1.0.0"
    arch_version = "2.1.0"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.android.material:material:1.2.0-alpha04'
    implementation 'com.android.support.constraint:constraint-layout:1.3.0'
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.61"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"

    // Unit Test
    testImplementation "io.kotlintest:kotlintest-core:$kotlinTestVersion"
    testImplementation "io.kotlintest:kotlintest-assertions:$kotlinTestVersion"
    testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlinTestVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    testImplementation "android.arch.core:core-testing:1.1.1"

    //Dagger 2
    api "com.google.dagger:dagger-android:${daggerVersion}"
    api "com.google.dagger:dagger-android-support:${daggerVersion}"
    kapt "com.google.dagger:dagger-android-processor:${daggerVersion}"
    kapt "com.google.dagger:dagger-compiler:${daggerVersion}"

    // Network
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    // ReactiveX
    implementation "io.reactivex.rxjava2:rxjava:${rxjava2Version}"
    implementation "io.reactivex.rxjava2:rxandroid:${rxandroidVersion}"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:1.0.0'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    // Permission
    implementation 'pub.devrel:easypermissions:1.1.1'

    // Glide
    implementation "com.github.bumptech.glide:glide:${glideVersion}"
    implementation "com.github.bumptech.glide:annotations:${glideVersion}"
    kapt "com.github.bumptech.glide:compiler:${glideVersion}"
    kapt 'androidx.annotation:annotation:1.1.0'

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$savedstate_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    // Room
    implementation "android.arch.persistence.room:runtime:${roomVersion}"
    implementation "android.arch.persistence.room:rxjava2:${roomVersion}"
    kapt "android.arch.persistence.room:compiler:${roomVersion}"
    implementation "androidx.paging:paging-runtime-ktx:2.1.1"
}
